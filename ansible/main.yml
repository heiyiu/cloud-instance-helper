---
- name: "vm configuration playbook"
  hosts: localhost
  connection: local
  vars:
    ansible_remote_tmp: /tmp/
    kubernetes_dist: k3s # can be k0s, k3s, microk8s
    install_argocd: true
    kube_user: cloud_user
    kube_config_path: /etc/rancher/k3s/k3s.yaml
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
  tasks:
  - name: "install python3-pip"
    package:
      name: python3-pip
      state: present
    become: true
  - name: "install python libraries for interacting with kubernetes"
    ansible.builtin.pip:
      name:
        - kubernetes==26.1.0
  - name: "Install collection community.network"
    # not available in ansible 2.10.8/installed via apt
    community.general.ansible_galaxy_install:
      type: collection
      name: kubernetes.core
  # install libraries needed for image processing
  # move the following into a container
  #- name: "install python libraries"
  #  ansible.builtin.pip:
  #    name:
  #      - torch==2.0.0 
  #      - onnxruntime==1.14.1
  #      - accelerate==0.18.0
        # following doesn't seem to install successfully on ubuntu20
        #- diffusers[torch]==0.15.1
  #      - optimum[onnxruntime]==1.8.2
  #    extra_args: --user
  #  become: true
  #  become_user: batch
  # install a lightweight k9s distribution
  - name: "install k0s"
    ansible.builtin.include_tasks:
      file: tasks/install_k0s.yml
    vars:
      k0s_installer_path: /tmp/k0s.sh
    when: kubernetes_dist == "k0s"
  - name: "install k3s"
    ansible.builtin.include_tasks:
      file: tasks/install_k3s.yml
    vars:
      k3s_installer_path: /tmp/k3s.sh
    when: kubernetes_dist == "k3s"
  - name: "install microk8s stack"
    ansible.builtin.include_tasks:
      file: tasks/install_microk8s.yml
    when: kubernetes_dist == "microk8s"
  - name: "install helm"
    ansible.builtin.include_tasks:
      file: tasks/install_helm.yml
  - name: "install argocd"
    ansible.builtin.include_tasks:
      file: tasks/install_argocd.yml
    vars:
      argocd_cm_path: files/argocd_cm.yml
    when: install_argocd and kubernetes_dist == "k3s"
  - name: "install cert-manager and configure for https"
    ansible.builtin.include_tasks:
      file: tasks/setup_https.yml
    when: kubernetes_dist == "k3s"